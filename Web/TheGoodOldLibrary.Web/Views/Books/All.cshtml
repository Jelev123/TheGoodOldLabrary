@using TheGoodOldLibrary.Data.Models.ViewModel.Book
@model BookListViewModel


@{
    this.ViewData["Title"] = "All Books, page " + Model.PageNumber;
}

<h2 style="color : Black">@this.ViewData["Title"]</h2>



<div id="products-search-bar-holder" class="form-group d-flex justify-content-between w-50">
    <input type="text" class="form-control text-black" id="products-search-bar" name="search" placeholder="Search..." />
</div>

<div class="row">
    @foreach (var book in this.Model.Books)
    {


        <div class="col-md-4">
            <div class="col-md-10">
                <div class="card-body">
                    <a class="col-md-4" asp-controller="Books" asp-action="GetById" asp-route-id="@book.Id">
                        <img width="200" src="@book.OriginalUrl" />
                    </a>
                    <h6 style="color: black" class="card-title">@book.Name</h6>
                    <h6 style="color: black" class="card-title">@book.GenreName</h6>
                    @if (book.BookCount > 0)
                    {
                        <h7 style="color: green" class="card-title">Books Left: @book.BookCount</h7>

                    }
                    @if (book.BookCount <= 0)
                    {
                        <h7 style="color: red">No More Books Left</h7>
                    }

                </div>
            </div>
        </div>

    }
</div>
<partial name="_PaginPartilView" model="@Model" />



<script>
    $('#sort').change(function() {
        $('#order-form').submit();
    });

    $('#products-search-bar').on("change paste keyup", function() {
        $('.card-body').show();

        let searchValue = $('#products-search-bar').val();

        for (let name of $('.card-body')) {
            let productName = $($(name).children()[1]).text();

            if (!productName.toLowerCase().includes(searchValue.toLowerCase())) {
                $(name).hide();
            }
        }
    });
</script>


